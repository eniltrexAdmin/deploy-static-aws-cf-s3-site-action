name: 'React Build and Deploy'
description: 'Builds a react site and deploys it to CF+S@ 3Infra'
inputs:
  aws-access-key-id:  # id of input
    description: 'The key to identify the iam that will actually interact with AWS'
    required: true
  aws-secret-access-key:
    description: 'The key to identify the iam that will actually interact with AWS'
    required: true
  aws-region:
    description: 'The AWS region where you have the s3 bucket'
    required: true
    default: 'eu-west-3'
  aws-s3-bucket-name:
    description: 'The s3 bucket name where Cloudfront points as its origin'
    required: true
  aws-cf-id:
    description: 'The Cloudfront distribution ID, something that like like EXXXXXXXX'
    required: true

runs:
  using: "composite"
  steps:
    - name: Check out repository code
      uses: actions/checkout@v2
    - run: echo "ðŸ’¡ The ${{ github.repository }} repository has been cloned to the runner."
      shell: bash
    - name: NPM install
      shell: bash
      run: npm install
    - name: NPM build
      shell: bash
      run: npm run build
    - name: List files in the repository
      shell: bash
      run: |
        ls ${{ github.workspace }}
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ inputs.aws-access-key-id }}
        aws-secret-access-key: ${{ inputs.aws-secret-access-key }}
        aws-region: ${{ inputs.aws-region }}
    - name: Copy files to s3 bucket
      shell: bash
      run: |
        aws s3 sync build/ s3://${{ inputs.aws-s3-bucket-name }}/public/
        aws s3 cp build/index.html s3://${{ inputs.aws-s3-bucket-name }}/
    - name: Invalidate cache so CF stops serving old non existent versions
      shell: bash
      run: |
        aws cloudfront create-invalidation --distribution-id ${{ inputs.aws-cf-id }} --paths '/*'
